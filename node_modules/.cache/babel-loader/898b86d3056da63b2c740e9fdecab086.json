{"ast":null,"code":"import _classCallCheck from \"/Users/mikefoster/Git/propelSite/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mikefoster/Git/propelSite/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mikefoster/Git/propelSite/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mikefoster/Git/propelSite/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mikefoster/Git/propelSite/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/mikefoster/Git/propelSite/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/mikefoster/Git/propelSite/src/App.js\";\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink } from 'reactstrap';\nimport back from './back_.jpg';\nimport logo from \"./white logo.svg\";\nimport Switch from './Switch';\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.routeTo = _this.routeTo.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"routeTo\",\n    value: function routeTo(type, suffix) {\n      var router = this.props.router;\n\n      if (type === 'routeback') {\n        window.location = router.previousRoute ? \"#\".concat(router.previousRoute.path) : '#';\n      } else if (type === 'routeahead') {\n        window.location = \"#\".concat(router.route.path, \"/\").concat(suffix);\n      } else {\n        window.location = \"#/\".concat(suffix);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          router = _this$props.router,\n          moduleMappings = _this$props.moduleMappings;\n      var nonHomeRoutes = moduleMappings;\n      delete nonHomeRoutes[0];\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        className: \"propNav\",\n        light: true,\n        expand: \"md\",\n        fixed: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(NavbarBrand, {\n        href: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        style: {\n          height: \"50px\"\n        },\n        src: logo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }))), React.createElement(NavbarToggler, {\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(Collapse, {\n        isOpen: this.state.isOpen,\n        navbar: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        className: \"ml-auto\",\n        navbar: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, nonHomeRoutes.map(function (route) {\n        return React.createElement(NavItem, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(NavLink, {\n          style: {\n            color: \"white\"\n          },\n          href: route.path,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, route.label));\n      })))), React.createElement(Switch, {\n        moduleMappings: moduleMappings,\n        routeTo: this.routeTo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nApp.propTypes = {\n  moduleMappings: PropTypes.objectOf(PropTypes.object).isRequired,\n  router: PropTypes.objectOf(PropTypes.object).isRequired,\n  isLoggedIn: PropTypes.func.isRequired,\n  businessId: PropTypes.string.isRequired,\n  businessName: PropTypes.string.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    router: state.router\n  };\n};\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["/Users/mikefoster/Git/propelSite/src/App.js"],"names":["connect","PropTypes","React","Collapse","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","NavLink","back","Switch","App","props","routeTo","bind","type","suffix","router","window","location","previousRoute","path","route","moduleMappings","nonHomeRoutes","height","logo","toggle","state","isOpen","map","color","label","Component","propTypes","objectOf","object","isRequired","isLoggedIn","func","businessId","string","businessName","mapStateToProps"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n} from 'reactstrap';\n\n\nimport back from './back_.jpg'\nimport logo from './white logo.svg';\nimport Switch from './Switch';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.routeTo = this.routeTo.bind(this);\n  }\n\n\n\n  routeTo(type, suffix) {\n    const { router } = this.props;\n    if (type === 'routeback') {\n      window.location = router.previousRoute ? `#${router.previousRoute.path}` : '#';\n    } else if (type === 'routeahead') {\n      window.location = `#${router.route.path}/${suffix}`;\n    } else {\n      window.location = `#/${suffix}`;\n    }\n  }\n\n  render() {\n    const { router, moduleMappings } = this.props;\n    const nonHomeRoutes = moduleMappings;\n    delete nonHomeRoutes[0];\n    return (\n      <div>\n        <Navbar className=\"propNav\" light expand=\"md\" fixed=\"top\">\n          <NavbarBrand href=\"/\">\n            <div>\n              <img style={{ height: \"50px\" }} src={logo} />\n            </div>\n          </NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              {nonHomeRoutes.map(route => (\n                <NavItem >\n                  <NavLink style={{ color: \"white\" }} href={route.path}>{route.label}</NavLink>\n                </NavItem>\n              ))}\n            </Nav>\n          </Collapse>\n        </Navbar>\n        <Switch moduleMappings={moduleMappings} routeTo={this.routeTo} />\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  moduleMappings: PropTypes.objectOf(PropTypes.object).isRequired,\n  router: PropTypes.objectOf(PropTypes.object).isRequired,\n  isLoggedIn: PropTypes.func.isRequired,\n  businessId: PropTypes.string.isRequired,\n  businessName: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  router: state.router,\n});\n\nexport default connect(mapStateToProps)(App);\n"]},"metadata":{},"sourceType":"module"}