{"ast":null,"code":"/* istanbul ignore next */\n\n/*eslint no-console: 0*/\nvar noop = function noop() {};\n\nfunction loggerPlugin() {\n  var startGroup = void 0,\n      endGroup = void 0;\n\n  if (console.groupCollapsed) {\n    startGroup = function startGroup(label) {\n      return console.groupCollapsed(label);\n    };\n\n    endGroup = function endGroup() {\n      return console.groupEnd();\n    };\n  } else if (console.group) {\n    startGroup = function startGroup(label) {\n      return console.group(label);\n    };\n\n    endGroup = function endGroup() {\n      return console.groupEnd();\n    };\n  } else {\n    startGroup = noop;\n    endGroup = noop;\n  }\n\n  console.info('Router started');\n  return {\n    onStop: function onStop() {\n      console.info('Router stopped');\n    },\n    onTransitionStart: function onTransitionStart(toState, fromState) {\n      endGroup();\n      startGroup('Router transition');\n      console.log('Transition started from state');\n      console.log(fromState);\n      console.log('To state');\n      console.log(toState);\n    },\n    onTransitionCancel: function onTransitionCancel() {\n      console.warn('Transition cancelled');\n    },\n    onTransitionError: function onTransitionError(toState, fromState, err) {\n      console.warn('Transition error with code ' + err.code);\n      endGroup();\n    },\n    onTransitionSuccess: function onTransitionSuccess() {\n      console.log('Transition success');\n      endGroup();\n    }\n  };\n}\n\nloggerPlugin.pluginName = 'LOGGER_PLUGIN';\nexport default loggerPlugin;","map":null,"metadata":{},"sourceType":"module"}