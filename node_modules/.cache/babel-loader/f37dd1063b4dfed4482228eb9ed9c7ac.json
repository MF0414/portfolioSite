{"ast":null,"code":"var toFunction = function toFunction(val) {\n  return typeof val === 'function' ? val : function () {\n    return function () {\n      return val;\n    };\n  };\n};\n\nexport default function withRouteLifecycle(router) {\n  var canDeactivateFactories = {};\n  var canActivateFactories = {};\n  var canDeactivateFunctions = {};\n  var canActivateFunctions = {};\n  router.canDeactivate = canDeactivate;\n  router.canActivate = canActivate;\n  router.getLifecycleFactories = getLifecycleFactories;\n  router.getLifecycleFunctions = getLifecycleFunctions;\n  router.clearCanDeactivate = clearCanDeactivate;\n\n  function getLifecycleFactories() {\n    return [canDeactivateFactories, canActivateFactories];\n  }\n\n  function getLifecycleFunctions() {\n    return [canDeactivateFunctions, canActivateFunctions];\n  }\n  /**\n   * Register a canDeactivate handler or specify a if a route can be deactivated\n   * @param  {String} name                           The route name\n   * @param  {Function|Boolean} canDeactivateHandler The canDeactivate handler or boolean\n   * @return {Object}                                The router instance\n   */\n\n\n  function canDeactivate(name, canDeactivateHandler) {\n    var factory = toFunction(canDeactivateHandler);\n    canDeactivateFactories[name] = factory;\n    canDeactivateFunctions[name] = router.executeFactory(factory);\n    return router;\n  }\n  /**\n   * Remove a canDeactivate handler for a route\n   * @param  {String} name The route name\n   * @return {Object}      The router instance\n   */\n\n\n  function clearCanDeactivate(name) {\n    canDeactivateFactories[name] = undefined;\n    canDeactivateFunctions[name] = undefined;\n    return router;\n  }\n  /**\n   * Register a canActivate handler or specify a if a route can be deactivated\n   * @param  {String} name                         The route name\n   * @param  {Function|Boolean} canActivateHandler The canActivate handler or boolean\n   * @return {Object}                              The router instance\n   */\n\n\n  function canActivate(name, canActivateHandler) {\n    var factory = toFunction(canActivateHandler);\n    canActivateFactories[name] = factory;\n    canActivateFunctions[name] = router.executeFactory(factory);\n    return router;\n  }\n}","map":null,"metadata":{},"sourceType":"module"}